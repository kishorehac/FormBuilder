{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\components\\\\CategorizedForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategorizedForm = ({\n  addQuestion\n}) => {\n  _s();\n  const [categories, setCategories] = useState(['Category 1', 'Category 2']);\n  const [options, setOptions] = useState(['Option 1', 'Option 2', 'Option 3']);\n  const [answers, setAnswers] = useState({\n    'Category 1': [],\n    'Category 2': []\n  });\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n\n    // If dropped outside a valid destination\n    if (!destination) return;\n\n    // If dropped into the same location\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n\n    // Handle moving between categories\n    const startCategory = source.droppableId;\n    const endCategory = destination.droppableId;\n\n    // Clone the source items\n    const startItems = startCategory === 'options' ? [...options] : [...answers[startCategory]];\n    const endItems = endCategory === 'options' ? [...options] : [...answers[endCategory]];\n\n    // Remove the dragged item from source\n    const [movedItem] = startItems.splice(source.index, 1);\n\n    // Add the dragged item to the destination\n    endItems.splice(destination.index, 0, movedItem);\n\n    // Update the state\n    if (startCategory === 'options') setOptions(startItems);else setAnswers({\n      ...answers,\n      [startCategory]: startItems\n    });\n    if (endCategory === 'options') setOptions(endItems);else setAnswers({\n      ...answers,\n      [endCategory]: endItems\n    });\n  };\n  const handleAddCategory = () => {\n    const newCategory = `Category ${categories.length + 1}`;\n    setCategories([...categories, newCategory]);\n    setAnswers({\n      ...answers,\n      [newCategory]: []\n    });\n  };\n  const handleSubmit = () => {\n    addQuestion({\n      type: 'categorized',\n      data: {\n        categories,\n        options\n      }\n    });\n    setCategories(['Category 1', 'Category 2']);\n    setOptions(['Option 1', 'Option 2', 'Option 3']);\n    setAnswers({\n      'Category 1': [],\n      'Category 2': []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"border p-4 rounded-md shadow-md mb-4 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-bold mb-2\",\n      children: \"Categorized Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddCategory,\n      className: \"btn-primary mb-4\",\n      children: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"options\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            className: \"border p-2 rounded-md w-1/3 bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-bold text-gray-700\",\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: option,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                className: \"bg-white p-2 my-1 rounded-md shadow-md\",\n                children: option\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: category,\n          children: provided => {\n            var _answers$category;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.droppableProps,\n              className: \"border p-2 rounded-md w-1/3 bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-bold text-gray-700\",\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), (_answers$category = answers[category]) === null || _answers$category === void 0 ? void 0 : _answers$category.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                draggableId: item,\n                index: index,\n                children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                  ref: provided.innerRef,\n                  ...provided.draggableProps,\n                  ...provided.dragHandleProps,\n                  className: \"bg-white p-2 my-1 rounded-md shadow-md\",\n                  children: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 25\n                }, this)\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 21\n              }, this)), provided.placeholder]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this);\n          }\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"btn-primary mt-4\",\n      children: \"Add Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(CategorizedForm, \"uou+2HXBSjurAlNa4BHqszXepo0=\");\n_c = CategorizedForm;\nexport default CategorizedForm;\nvar _c;\n$RefreshReg$(_c, \"CategorizedForm\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","CategorizedForm","addQuestion","_s","categories","setCategories","options","setOptions","answers","setAnswers","onDragEnd","result","source","destination","droppableId","index","startCategory","endCategory","startItems","endItems","movedItem","splice","handleAddCategory","newCategory","length","handleSubmit","type","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","provided","ref","innerRef","droppableProps","map","option","draggableId","draggableProps","dragHandleProps","placeholder","category","_answers$category","item","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/components/CategorizedForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst CategorizedForm = ({ addQuestion }) => {\r\n  const [categories, setCategories] = useState(['Category 1', 'Category 2']);\r\n  const [options, setOptions] = useState(['Option 1', 'Option 2', 'Option 3']);\r\n  const [answers, setAnswers] = useState({\r\n    'Category 1': [],\r\n    'Category 2': [],\r\n  });\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    // If dropped outside a valid destination\r\n    if (!destination) return;\r\n\r\n    // If dropped into the same location\r\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\r\n      return;\r\n    }\r\n\r\n    // Handle moving between categories\r\n    const startCategory = source.droppableId;\r\n    const endCategory = destination.droppableId;\r\n\r\n    // Clone the source items\r\n    const startItems = startCategory === 'options' ? [...options] : [...answers[startCategory]];\r\n    const endItems = endCategory === 'options' ? [...options] : [...answers[endCategory]];\r\n\r\n    // Remove the dragged item from source\r\n    const [movedItem] = startItems.splice(source.index, 1);\r\n\r\n    // Add the dragged item to the destination\r\n    endItems.splice(destination.index, 0, movedItem);\r\n\r\n    // Update the state\r\n    if (startCategory === 'options') setOptions(startItems);\r\n    else setAnswers({ ...answers, [startCategory]: startItems });\r\n\r\n    if (endCategory === 'options') setOptions(endItems);\r\n    else setAnswers({ ...answers, [endCategory]: endItems });\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    const newCategory = `Category ${categories.length + 1}`;\r\n    setCategories([...categories, newCategory]);\r\n    setAnswers({ ...answers, [newCategory]: [] });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    addQuestion({\r\n      type: 'categorized',\r\n      data: { categories, options },\r\n    });\r\n    setCategories(['Category 1', 'Category 2']);\r\n    setOptions(['Option 1', 'Option 2', 'Option 3']);\r\n    setAnswers({\r\n      'Category 1': [],\r\n      'Category 2': [],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"border p-4 rounded-md shadow-md mb-4 bg-white\">\r\n      <h3 className=\"text-lg font-bold mb-2\">Categorized Question</h3>\r\n\r\n      <button\r\n        onClick={handleAddCategory}\r\n        className=\"btn-primary mb-4\"\r\n      >\r\n        Add Category\r\n      </button>\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <div className=\"flex space-x-4\">\r\n          {/* Options Section */}\r\n          <Droppable droppableId=\"options\">\r\n            {(provided) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                className=\"border p-2 rounded-md w-1/3 bg-gray-50\"\r\n              >\r\n                <h4 className=\"font-bold text-gray-700\">Options</h4>\r\n                {options.map((option, index) => (\r\n                  <Draggable key={option} draggableId={option} index={index}>\r\n                    {(provided) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        className=\"bg-white p-2 my-1 rounded-md shadow-md\"\r\n                      >\r\n                        {option}\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          {/* Categories Section */}\r\n          {categories.map((category) => (\r\n            <Droppable key={category} droppableId={category}>\r\n              {(provided) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  className=\"border p-2 rounded-md w-1/3 bg-gray-50\"\r\n                >\r\n                  <h4 className=\"font-bold text-gray-700\">{category}</h4>\r\n                  {answers[category]?.map((item, index) => (\r\n                    <Draggable key={item} draggableId={item} index={index}>\r\n                      {(provided) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          className=\"bg-white p-2 my-1 rounded-md shadow-md\"\r\n                        >\r\n                          {item}\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          ))}\r\n        </div>\r\n      </DragDropContext>\r\n\r\n      <button onClick={handleSubmit} className=\"btn-primary mt-4\">\r\n        Add Question\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategorizedForm;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;EAC1E,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;EAC5E,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC;IACrC,YAAY,EAAE,EAAE;IAChB,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMe,SAAS,GAAIC,MAAM,IAAK;IAC5B,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;;IAEtC;IACA,IAAI,CAACE,WAAW,EAAE;;IAElB;IACA,IAAID,MAAM,CAACE,WAAW,KAAKD,WAAW,CAACC,WAAW,IAAIF,MAAM,CAACG,KAAK,KAAKF,WAAW,CAACE,KAAK,EAAE;MACxF;IACF;;IAEA;IACA,MAAMC,aAAa,GAAGJ,MAAM,CAACE,WAAW;IACxC,MAAMG,WAAW,GAAGJ,WAAW,CAACC,WAAW;;IAE3C;IACA,MAAMI,UAAU,GAAGF,aAAa,KAAK,SAAS,GAAG,CAAC,GAAGV,OAAO,CAAC,GAAG,CAAC,GAAGE,OAAO,CAACQ,aAAa,CAAC,CAAC;IAC3F,MAAMG,QAAQ,GAAGF,WAAW,KAAK,SAAS,GAAG,CAAC,GAAGX,OAAO,CAAC,GAAG,CAAC,GAAGE,OAAO,CAACS,WAAW,CAAC,CAAC;;IAErF;IACA,MAAM,CAACG,SAAS,CAAC,GAAGF,UAAU,CAACG,MAAM,CAACT,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;;IAEtD;IACAI,QAAQ,CAACE,MAAM,CAACR,WAAW,CAACE,KAAK,EAAE,CAAC,EAAEK,SAAS,CAAC;;IAEhD;IACA,IAAIJ,aAAa,KAAK,SAAS,EAAET,UAAU,CAACW,UAAU,CAAC,CAAC,KACnDT,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACQ,aAAa,GAAGE;IAAW,CAAC,CAAC;IAE5D,IAAID,WAAW,KAAK,SAAS,EAAEV,UAAU,CAACY,QAAQ,CAAC,CAAC,KAC/CV,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACS,WAAW,GAAGE;IAAS,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAG,YAAYnB,UAAU,CAACoB,MAAM,GAAG,CAAC,EAAE;IACvDnB,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEmB,WAAW,CAAC,CAAC;IAC3Cd,UAAU,CAAC;MAAE,GAAGD,OAAO;MAAE,CAACe,WAAW,GAAG;IAAG,CAAC,CAAC;EAC/C,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBvB,WAAW,CAAC;MACVwB,IAAI,EAAE,aAAa;MACnBC,IAAI,EAAE;QAAEvB,UAAU;QAAEE;MAAQ;IAC9B,CAAC,CAAC;IACFD,aAAa,CAAC,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IAC3CE,UAAU,CAAC,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAChDE,UAAU,CAAC;MACT,YAAY,EAAE,EAAE;MAChB,YAAY,EAAE;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA;IAAK4B,SAAS,EAAC,+CAA+C;IAAAC,QAAA,gBAC5D7B,OAAA;MAAI4B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhEjC,OAAA;MACEkC,OAAO,EAAEZ,iBAAkB;MAC3BM,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC7B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETjC,OAAA,CAACJ,eAAe;MAACc,SAAS,EAAEA,SAAU;MAAAmB,QAAA,eACpC7B,OAAA;QAAK4B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAE7B7B,OAAA,CAACH,SAAS;UAACiB,WAAW,EAAC,SAAS;UAAAe,QAAA,EAC5BM,QAAQ,iBACRnC,OAAA;YACEoC,GAAG,EAAED,QAAQ,CAACE,QAAS;YAAA,GACnBF,QAAQ,CAACG,cAAc;YAC3BV,SAAS,EAAC,wCAAwC;YAAAC,QAAA,gBAElD7B,OAAA;cAAI4B,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACnD3B,OAAO,CAACiC,GAAG,CAAC,CAACC,MAAM,EAAEzB,KAAK,kBACzBf,OAAA,CAACF,SAAS;cAAc2C,WAAW,EAAED,MAAO;cAACzB,KAAK,EAAEA,KAAM;cAAAc,QAAA,EACtDM,QAAQ,iBACRnC,OAAA;gBACEoC,GAAG,EAAED,QAAQ,CAACE,QAAS;gBAAA,GACnBF,QAAQ,CAACO,cAAc;gBAAA,GACvBP,QAAQ,CAACQ,eAAe;gBAC5Bf,SAAS,EAAC,wCAAwC;gBAAAC,QAAA,EAEjDW;cAAM;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YACN,GAVaO,MAAM;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWX,CACZ,CAAC,EACDE,QAAQ,CAACS,WAAW;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,EAGX7B,UAAU,CAACmC,GAAG,CAAEM,QAAQ,iBACvB7C,OAAA,CAACH,SAAS;UAAgBiB,WAAW,EAAE+B,QAAS;UAAAhB,QAAA,EAC5CM,QAAQ;YAAA,IAAAW,iBAAA;YAAA,oBACR9C,OAAA;cACEoC,GAAG,EAAED,QAAQ,CAACE,QAAS;cAAA,GACnBF,QAAQ,CAACG,cAAc;cAC3BV,SAAS,EAAC,wCAAwC;cAAAC,QAAA,gBAElD7B,OAAA;gBAAI4B,SAAS,EAAC,yBAAyB;gBAAAC,QAAA,EAAEgB;cAAQ;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,GAAAa,iBAAA,GACtDtC,OAAO,CAACqC,QAAQ,CAAC,cAAAC,iBAAA,uBAAjBA,iBAAA,CAAmBP,GAAG,CAAC,CAACQ,IAAI,EAAEhC,KAAK,kBAClCf,OAAA,CAACF,SAAS;gBAAY2C,WAAW,EAAEM,IAAK;gBAAChC,KAAK,EAAEA,KAAM;gBAAAc,QAAA,EAClDM,QAAQ,iBACRnC,OAAA;kBACEoC,GAAG,EAAED,QAAQ,CAACE,QAAS;kBAAA,GACnBF,QAAQ,CAACO,cAAc;kBAAA,GACvBP,QAAQ,CAACQ,eAAe;kBAC5Bf,SAAS,EAAC,wCAAwC;kBAAAC,QAAA,EAEjDkB;gBAAI;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF;cACN,GAVac,IAAI;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAWT,CACZ,CAAC,EACDE,QAAQ,CAACS,WAAW;YAAA;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA;QACP,GAxBaY,QAAQ;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyBb,CACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC,eAElBjC,OAAA;MAAQkC,OAAO,EAAET,YAAa;MAACG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAC;IAE5D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA1IIF,eAAe;AAAA+C,EAAA,GAAf/C,eAAe;AA4IrB,eAAeA,eAAe;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}