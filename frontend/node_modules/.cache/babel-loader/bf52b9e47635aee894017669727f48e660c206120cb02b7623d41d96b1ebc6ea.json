{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\components\\\\ClozeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClozeForm = () => {\n  _s();\n  const [questionText, setQuestionText] = useState(\"\");\n  const [blanks, setBlanks] = useState([]);\n  const handleTextSelection = () => {\n    const textarea = document.getElementById(\"questionTextarea\");\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    if (start === end) {\n      alert(\"Please select some text to make it a blank.\");\n      return;\n    }\n    const selectedText = questionText.substring(start, end);\n    setBlanks([...blanks, {\n      text: selectedText,\n      startIndex: start,\n      endIndex: end\n    }]);\n    alert(`Blank added: \"${selectedText}\"`);\n  };\n  const handleSaveQuestion = async () => {\n    if (!questionText.trim()) {\n      alert(\"Question text cannot be empty.\");\n      return;\n    }\n    if (blanks.length === 0) {\n      alert(\"Please add at least one blank.\");\n      return;\n    }\n    const questionData = {\n      questionText,\n      blanks\n    };\n    try {\n      await axios.post(\"/save-cloze-question\", questionData);\n      alert(\"Question saved successfully!\");\n      setQuestionText(\"\");\n      setBlanks([]);\n    } catch (error) {\n      console.error(\"Error saving question:\", error);\n      alert(\"Failed to save the question.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Cloze Question Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"questionTextarea\",\n      value: questionText,\n      onChange: e => setQuestionText(e.target.value),\n      className: \"w-full p-2 border rounded mb-4\",\n      rows: \"5\",\n      placeholder: \"Type your question here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTextSelection,\n      className: \"mr-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n      children: \"Underline Selected Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveQuestion,\n      className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\n      children: \"Save Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold\",\n        children: \"Blanks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), blanks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No blanks added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-6\",\n        children: blanks.map((blank, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: blank.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), \" (Start: \", blank.startIndex, \", End: \", blank.endIndex, \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ClozeForm, \"LnZ7Lb3jkuqCOb3pJDj1ElSa0ZY=\");\n_c = ClozeForm;\nexport default ClozeForm;\nvar _c;\n$RefreshReg$(_c, \"ClozeForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ClozeForm","_s","questionText","setQuestionText","blanks","setBlanks","handleTextSelection","textarea","document","getElementById","start","selectionStart","end","selectionEnd","alert","selectedText","substring","text","startIndex","endIndex","handleSaveQuestion","trim","length","questionData","post","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","e","target","rows","placeholder","onClick","map","blank","index","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/components/ClozeForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"../services/api\";\r\n\r\nconst ClozeForm = () => {\r\n  const [questionText, setQuestionText] = useState(\"\");\r\n  const [blanks, setBlanks] = useState([]);\r\n\r\n  const handleTextSelection = () => {\r\n    const textarea = document.getElementById(\"questionTextarea\");\r\n    const start = textarea.selectionStart;\r\n    const end = textarea.selectionEnd;\r\n\r\n    if (start === end) {\r\n      alert(\"Please select some text to make it a blank.\");\r\n      return;\r\n    }\r\n\r\n    const selectedText = questionText.substring(start, end);\r\n    setBlanks([...blanks, { text: selectedText, startIndex: start, endIndex: end }]);\r\n    alert(`Blank added: \"${selectedText}\"`);\r\n  };\r\n\r\n  const handleSaveQuestion = async () => {\r\n    if (!questionText.trim()) {\r\n      alert(\"Question text cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    if (blanks.length === 0) {\r\n      alert(\"Please add at least one blank.\");\r\n      return;\r\n    }\r\n\r\n    const questionData = {\r\n      questionText,\r\n      blanks,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\"/save-cloze-question\", questionData);\r\n      alert(\"Question saved successfully!\");\r\n      setQuestionText(\"\");\r\n      setBlanks([]);\r\n    } catch (error) {\r\n      console.error(\"Error saving question:\", error);\r\n      alert(\"Failed to save the question.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded shadow\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Cloze Question Builder</h2>\r\n      <textarea\r\n        id=\"questionTextarea\"\r\n        value={questionText}\r\n        onChange={(e) => setQuestionText(e.target.value)}\r\n        className=\"w-full p-2 border rounded mb-4\"\r\n        rows=\"5\"\r\n        placeholder=\"Type your question here...\"\r\n      ></textarea>\r\n\r\n      <button\r\n        onClick={handleTextSelection}\r\n        className=\"mr-2 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n      >\r\n        Underline Selected Text\r\n      </button>\r\n      <button\r\n        onClick={handleSaveQuestion}\r\n        className=\"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\r\n      >\r\n        Save Question\r\n      </button>\r\n\r\n      <div className=\"mt-4\">\r\n        <h3 className=\"text-lg font-bold\">Blanks:</h3>\r\n        {blanks.length === 0 ? (\r\n          <p>No blanks added yet.</p>\r\n        ) : (\r\n          <ul className=\"list-disc pl-6\">\r\n            {blanks.map((blank, index) => (\r\n              <li key={index}>\r\n                <strong>{blank.text}</strong> (Start: {blank.startIndex}, End: {blank.endIndex})\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClozeForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IAC5D,MAAMC,KAAK,GAAGH,QAAQ,CAACI,cAAc;IACrC,MAAMC,GAAG,GAAGL,QAAQ,CAACM,YAAY;IAEjC,IAAIH,KAAK,KAAKE,GAAG,EAAE;MACjBE,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACF;IAEA,MAAMC,YAAY,GAAGb,YAAY,CAACc,SAAS,CAACN,KAAK,EAAEE,GAAG,CAAC;IACvDP,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE;MAAEa,IAAI,EAAEF,YAAY;MAAEG,UAAU,EAAER,KAAK;MAAES,QAAQ,EAAEP;IAAI,CAAC,CAAC,CAAC;IAChFE,KAAK,CAAC,iBAAiBC,YAAY,GAAG,CAAC;EACzC,CAAC;EAED,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAI,CAAClB,YAAY,CAACmB,IAAI,CAAC,CAAC,EAAE;MACxBP,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IAEA,IAAIV,MAAM,CAACkB,MAAM,KAAK,CAAC,EAAE;MACvBR,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IAEA,MAAMS,YAAY,GAAG;MACnBrB,YAAY;MACZE;IACF,CAAC;IAED,IAAI;MACF,MAAMP,KAAK,CAAC2B,IAAI,CAAC,sBAAsB,EAAED,YAAY,CAAC;MACtDT,KAAK,CAAC,8BAA8B,CAAC;MACrCX,eAAe,CAAC,EAAE,CAAC;MACnBE,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CX,KAAK,CAAC,8BAA8B,CAAC;IACvC;EACF,CAAC;EAED,oBACEf,OAAA;IAAK4B,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxC7B,OAAA;MAAI4B,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClEjC,OAAA;MACEkC,EAAE,EAAC,kBAAkB;MACrBC,KAAK,EAAEhC,YAAa;MACpBiC,QAAQ,EAAGC,CAAC,IAAKjC,eAAe,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDP,SAAS,EAAC,gCAAgC;MAC1CW,IAAI,EAAC,GAAG;MACRC,WAAW,EAAC;IAA4B;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eAEZjC,OAAA;MACEyC,OAAO,EAAElC,mBAAoB;MAC7BqB,SAAS,EAAC,iEAAiE;MAAAC,QAAA,EAC5E;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjC,OAAA;MACEyC,OAAO,EAAEpB,kBAAmB;MAC5BO,SAAS,EAAC,8DAA8D;MAAAC,QAAA,EACzE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAETjC,OAAA;MAAK4B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB7B,OAAA;QAAI4B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7C5B,MAAM,CAACkB,MAAM,KAAK,CAAC,gBAClBvB,OAAA;QAAA6B,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE3BjC,OAAA;QAAI4B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC3BxB,MAAM,CAACqC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB5C,OAAA;UAAA6B,QAAA,gBACE7B,OAAA;YAAA6B,QAAA,EAASc,KAAK,CAACzB;UAAI;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,aAAS,EAACU,KAAK,CAACxB,UAAU,EAAC,SAAO,EAACwB,KAAK,CAACvB,QAAQ,EAAC,GACjF;QAAA,GAFSwB,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAvFID,SAAS;AAAA4C,EAAA,GAAT5C,SAAS;AAyFf,eAAeA,SAAS;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}