{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\components\\\\ClozeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { saveFormData } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClozeForm = ({\n  addQuestion\n}) => {\n  _s();\n  const [text, setText] = useState(''); // The main question text\n  const [blanks, setBlanks] = useState([]); // Stores blanks (selected words)\n\n  // Handle text selection and convert to blanks\n  const handleUnderline = () => {\n    const selection = window.getSelection();\n    const selectedText = selection.toString().trim();\n    if (!selectedText) {\n      alert('Please select some text to underline as a blank!');\n      return;\n    }\n    const startIndex = text.indexOf(selectedText);\n    if (startIndex === -1) {\n      alert('Error: Selected text not found in the question!');\n      return;\n    }\n\n    // Add to blanks if not already present\n    setBlanks(prevBlanks => {\n      if (prevBlanks.some(blank => blank.text === selectedText)) {\n        alert('This blank already exists!');\n        return prevBlanks;\n      }\n      return [...prevBlanks, {\n        text: selectedText,\n        startIndex\n      }];\n    });\n\n    // Clear text selection\n    selection.removeAllRanges();\n  };\n\n  // Save the question to the database\n  const handleSave = async () => {\n    const questionData = {\n      type: 'cloze',\n      questionText: text,\n      blanks\n    };\n    try {\n      const response = await saveFormData('/questions', questionData);\n      console.log('Saved question:', response.data);\n\n      // Optionally add question to the form builder UI\n      addQuestion(questionData);\n    } catch (error) {\n      console.error('Error saving question:', error);\n      alert('Failed to save the question. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Cloze (Fill-in-the-Blank) Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: text,\n      onChange: e => setText(e.target.value),\n      rows: \"4\",\n      className: \"w-full p-2 border rounded\",\n      placeholder: \"Type your question text here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUnderline,\n      className: \"mt-4 px-4 py-2 bg-blue-500 text-white rounded\",\n      children: \"Underline Selected Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: \"Blanks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), blanks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No blanks added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc ml-6\",\n        children: blanks.map((blank, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"mt-2\",\n          children: [blank.text, \" (Position: \", blank.startIndex, \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"mt-4 px-6 py-2 bg-green-500 text-white rounded\",\n      children: \"Save Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ClozeForm, \"RZfs2GxiCMsvmmeSOdo9WCXVL/I=\");\n_c = ClozeForm;\nexport default ClozeForm;\nvar _c;\n$RefreshReg$(_c, \"ClozeForm\");","map":{"version":3,"names":["React","useState","saveFormData","jsxDEV","_jsxDEV","ClozeForm","addQuestion","_s","text","setText","blanks","setBlanks","handleUnderline","selection","window","getSelection","selectedText","toString","trim","alert","startIndex","indexOf","prevBlanks","some","blank","removeAllRanges","handleSave","questionData","type","questionText","response","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","placeholder","onClick","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/components/ClozeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { saveFormData } from '../services/api';\r\n\r\nconst ClozeForm = ({ addQuestion }) => {\r\n  const [text, setText] = useState(''); // The main question text\r\n  const [blanks, setBlanks] = useState([]); // Stores blanks (selected words)\r\n\r\n  // Handle text selection and convert to blanks\r\n  const handleUnderline = () => {\r\n    const selection = window.getSelection();\r\n    const selectedText = selection.toString().trim();\r\n\r\n    if (!selectedText) {\r\n      alert('Please select some text to underline as a blank!');\r\n      return;\r\n    }\r\n\r\n    const startIndex = text.indexOf(selectedText);\r\n\r\n    if (startIndex === -1) {\r\n      alert('Error: Selected text not found in the question!');\r\n      return;\r\n    }\r\n\r\n    // Add to blanks if not already present\r\n    setBlanks((prevBlanks) => {\r\n      if (prevBlanks.some((blank) => blank.text === selectedText)) {\r\n        alert('This blank already exists!');\r\n        return prevBlanks;\r\n      }\r\n      return [...prevBlanks, { text: selectedText, startIndex }];\r\n    });\r\n\r\n    // Clear text selection\r\n    selection.removeAllRanges();\r\n  };\r\n\r\n  // Save the question to the database\r\n  const handleSave = async () => {\r\n    const questionData = {\r\n      type: 'cloze',\r\n      questionText: text,\r\n      blanks,\r\n    };\r\n\r\n    try {\r\n      const response = await saveFormData('/questions', questionData);\r\n      console.log('Saved question:', response.data);\r\n\r\n      // Optionally add question to the form builder UI\r\n      addQuestion(questionData);\r\n    } catch (error) {\r\n      console.error('Error saving question:', error);\r\n      alert('Failed to save the question. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded shadow-md\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Cloze (Fill-in-the-Blank) Question</h2>\r\n\r\n      {/* Text Input */}\r\n      <textarea\r\n        value={text}\r\n        onChange={(e) => setText(e.target.value)}\r\n        rows=\"4\"\r\n        className=\"w-full p-2 border rounded\"\r\n        placeholder=\"Type your question text here...\"\r\n      ></textarea>\r\n\r\n      {/* Underline Button */}\r\n      <button\r\n        onClick={handleUnderline}\r\n        className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded\"\r\n      >\r\n        Underline Selected Text\r\n      </button>\r\n\r\n      {/* Blanks Display */}\r\n      <div className=\"mt-4\">\r\n        <h3 className=\"font-semibold\">Blanks</h3>\r\n        {blanks.length === 0 ? (\r\n          <p className=\"text-gray-500\">No blanks added yet.</p>\r\n        ) : (\r\n          <ul className=\"list-disc ml-6\">\r\n            {blanks.map((blank, index) => (\r\n              <li key={index} className=\"mt-2\">\r\n                {blank.text} (Position: {blank.startIndex})\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      {/* Save Button */}\r\n      <button\r\n        onClick={handleSave}\r\n        className=\"mt-4 px-6 py-2 bg-green-500 text-white rounded\"\r\n      >\r\n        Save Question\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClozeForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}