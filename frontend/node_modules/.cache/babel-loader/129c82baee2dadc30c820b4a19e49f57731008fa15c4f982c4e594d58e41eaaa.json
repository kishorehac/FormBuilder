{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport FormBuilder from './pages/FormBuilder';\nimport FormRenderer from './components/FormRenderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  // Sample questions for all three sections\n  const questions = [{\n    type: 'categorized',\n    data: {\n      categories: ['Fruits', 'Vegetables'],\n      options: ['Apple', 'Carrot', 'Banana', 'Potato']\n    }\n  }, {\n    type: 'cloze',\n    data: {\n      text: 'A quick brown fox jumps over the lazy dog.',\n      blanks: ['fox', 'dog']\n    }\n  }, {\n    type: 'comprehension',\n    data: {\n      text: 'Read the passage and answer the questions.',\n      mcqs: [{\n        question: 'What is the main theme?',\n        options: ['Nature', 'Adventure', 'Science']\n      }, {\n        question: 'What is the color of the fox?',\n        options: ['Brown', 'White', 'Black']\n      }]\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(FormBuilder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/renderer\",\n        element: /*#__PURE__*/_jsxDEV(FormRenderer, {\n          questions: questions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","FormBuilder","FormRenderer","jsxDEV","_jsxDEV","App","questions","type","data","categories","options","text","blanks","mcqs","question","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport FormBuilder from './pages/FormBuilder';\nimport FormRenderer from './components/FormRenderer';\n\nconst App = () => {\n  // Sample questions for all three sections\n  const questions = [\n    {\n      type: 'categorized',\n      data: {\n        categories: ['Fruits', 'Vegetables'],\n        options: ['Apple', 'Carrot', 'Banana', 'Potato'],\n      },\n    },\n    {\n      type: 'cloze',\n      data: {\n        text: 'A quick brown fox jumps over the lazy dog.',\n        blanks: ['fox', 'dog'],\n      },\n    },\n    {\n      type: 'comprehension',\n      data: {\n        text: 'Read the passage and answer the questions.',\n        mcqs: [\n          {\n            question: 'What is the main theme?',\n            options: ['Nature', 'Adventure', 'Science'],\n          },\n          {\n            question: 'What is the color of the fox?',\n            options: ['Brown', 'White', 'Black'],\n          },\n        ],\n      },\n    },\n  ];\n\n  return (\n    <Router>\n      <Routes>\n        {/* Route to the FormBuilder */}\n        <Route path=\"/\" element={<FormBuilder />} />\n\n        {/* Route to the FormRenderer with questions */}\n        <Route path=\"/renderer\" element={<FormRenderer questions={questions} />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB;EACA,MAAMC,SAAS,GAAG,CAChB;IACEC,IAAI,EAAE,aAAa;IACnBC,IAAI,EAAE;MACJC,UAAU,EAAE,CAAC,QAAQ,EAAE,YAAY,CAAC;MACpCC,OAAO,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ;IACjD;EACF,CAAC,EACD;IACEH,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;MACJG,IAAI,EAAE,4CAA4C;MAClDC,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK;IACvB;EACF,CAAC,EACD;IACEL,IAAI,EAAE,eAAe;IACrBC,IAAI,EAAE;MACJG,IAAI,EAAE,4CAA4C;MAClDE,IAAI,EAAE,CACJ;QACEC,QAAQ,EAAE,yBAAyB;QACnCJ,OAAO,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS;MAC5C,CAAC,EACD;QACEI,QAAQ,EAAE,+BAA+B;QACzCJ,OAAO,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO;MACrC,CAAC;IAEL;EACF,CAAC,CACF;EAED,oBACEN,OAAA,CAACN,MAAM;IAAAiB,QAAA,eACLX,OAAA,CAACL,MAAM;MAAAgB,QAAA,gBAELX,OAAA,CAACJ,KAAK;QAACgB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEb,OAAA,CAACH,WAAW;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAG5CjB,OAAA,CAACJ,KAAK;QAACgB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEb,OAAA,CAACF,YAAY;UAACI,SAAS,EAAEA;QAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GA9CIjB,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}