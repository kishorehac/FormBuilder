{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\components\\\\ClozeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClozeForm = ({\n  addQuestion\n}) => {\n  _s();\n  const [questionText, setQuestionText] = useState('');\n  const handleUnderline = text => {\n    setQuestionText(questionText + text); // Update the text to include underlined parts\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cloze Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: () => handleUnderline('__________'),\n      children: \"Click here to underline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: questionText,\n      onChange: e => setQuestionText(e.target.value),\n      placeholder: \"Enter your cloze question here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ClozeForm, \"knMhjdmnwCScssP/Z/qAsDgA55A=\");\n_c = ClozeForm;\nexport default ClozeForm;\nvar _c;\n$RefreshReg$(_c, \"ClozeForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ClozeForm","addQuestion","_s","questionText","setQuestionText","handleUnderline","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/components/ClozeForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst ClozeForm = ({ addQuestion }) => {\r\n  const [questionText, setQuestionText] = useState('');\r\n\r\n  const handleUnderline = (text) => {\r\n    setQuestionText(questionText + text);  // Update the text to include underlined parts\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Cloze Question</h3>\r\n      <p onClick={() => handleUnderline('__________')}>Click here to underline</p>\r\n      <textarea\r\n        value={questionText}\r\n        onChange={(e) => setQuestionText(e.target.value)}\r\n        placeholder=\"Enter your cloze question here\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClozeForm;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMQ,eAAe,GAAIC,IAAI,IAAK;IAChCF,eAAe,CAACD,YAAY,GAAGG,IAAI,CAAC,CAAC,CAAE;EACzC,CAAC;EAED,oBACEP,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBZ,OAAA;MAAGa,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAAC,YAAY,CAAE;MAAAE,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5EZ,OAAA;MACEc,KAAK,EAAEV,YAAa;MACpBW,QAAQ,EAAGC,CAAC,IAAKX,eAAe,CAACW,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACjDI,WAAW,EAAC;IAAgC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACT,EAAA,CAlBIF,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAoBf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}