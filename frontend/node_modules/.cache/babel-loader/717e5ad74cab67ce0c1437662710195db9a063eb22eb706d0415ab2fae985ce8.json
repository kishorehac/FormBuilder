{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\components\\\\FormRenderer.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormRenderer = ({\n  questions\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-renderer\",\n    children: questions.map((question, index) => {\n      if (question.type === 'categorized') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.data.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this);\n      } else if (question.type === 'cloze') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.data.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this);\n      } else if (question.type === 'comprehension') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: question.data.questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = FormRenderer;\nexport default FormRenderer;\nvar _c;\n$RefreshReg$(_c, \"FormRenderer\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FormRenderer","questions","className","children","map","question","index","type","data","questionText","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/components/FormRenderer.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst FormRenderer = ({ questions }) => {\r\n  return (\r\n    <div className=\"form-renderer\">\r\n      {questions.map((question, index) => {\r\n        if (question.type === 'categorized') {\r\n          return (\r\n            <div key={index}>\r\n              {/* Render categorized question */}\r\n              <h3>{question.data.questionText}</h3>\r\n              {/* Render categories and options */}\r\n            </div>\r\n          );\r\n        } else if (question.type === 'cloze') {\r\n          return (\r\n            <div key={index}>\r\n              {/* Render cloze (fill-in-the-blank) question */}\r\n              <h3>{question.data.questionText}</h3>\r\n              {/* Render blanks */}\r\n            </div>\r\n          );\r\n        } else if (question.type === 'comprehension') {\r\n          return (\r\n            <div key={index}>\r\n              {/* Render comprehension question */}\r\n              <h3>{question.data.questionText}</h3>\r\n              {/* Render options */}\r\n            </div>\r\n          );\r\n        }\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormRenderer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACtC,oBACEF,OAAA;IAAKG,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BF,SAAS,CAACG,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MAClC,IAAID,QAAQ,CAACE,IAAI,KAAK,aAAa,EAAE;QACnC,oBACER,OAAA;UAAAI,QAAA,eAEEJ,OAAA;YAAAI,QAAA,EAAKE,QAAQ,CAACG,IAAI,CAACC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GAF7BP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CAAC;MAEV,CAAC,MAAM,IAAIR,QAAQ,CAACE,IAAI,KAAK,OAAO,EAAE;QACpC,oBACER,OAAA;UAAAI,QAAA,eAEEJ,OAAA;YAAAI,QAAA,EAAKE,QAAQ,CAACG,IAAI,CAACC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GAF7BP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CAAC;MAEV,CAAC,MAAM,IAAIR,QAAQ,CAACE,IAAI,KAAK,eAAe,EAAE;QAC5C,oBACER,OAAA;UAAAI,QAAA,eAEEJ,OAAA;YAAAI,QAAA,EAAKE,QAAQ,CAACG,IAAI,CAACC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,GAF7BP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CAAC;MAEV;IACF,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAhCId,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}