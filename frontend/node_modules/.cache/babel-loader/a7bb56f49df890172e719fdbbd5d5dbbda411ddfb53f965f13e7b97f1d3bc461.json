{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\components\\\\ClozeForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { saveFormData } from \"../services/api\"; // Ensure this is implemented correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClozeForm = () => {\n  _s();\n  const [questionText, setQuestionText] = useState(\"\");\n  const [blanks, setBlanks] = useState([]);\n  const handleTextSelection = () => {\n    const textarea = document.getElementById(\"questionTextarea\");\n    const start = textarea.selectionStart; // Start index of selected text\n    const end = textarea.selectionEnd; // End index of selected text\n\n    if (start === end) {\n      alert(\"Please select some text to make it a blank.\");\n      return;\n    }\n    const selectedText = questionText.substring(start, end);\n\n    // Add the blank\n    setBlanks([...blanks, {\n      text: selectedText,\n      startIndex: start,\n      endIndex: end\n    }]);\n    alert(`Blank added: \"${selectedText}\"`);\n  };\n  const handleSave = async () => {\n    try {\n      const payload = {\n        question: questionText,\n        blanks\n      };\n      await saveFormData(payload);\n      alert(\"Cloze question saved successfully!\");\n      setQuestionText(\"\"); // Reset question text\n      setBlanks([]); // Reset blanks\n    } catch (error) {\n      console.error(\"Error saving cloze question:\", error);\n      alert(\"Failed to save cloze question.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-100 rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Cloze Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"questionTextarea\",\n      className: \"w-full h-32 p-2 border border-gray-300 rounded mb-4\",\n      placeholder: \"Type your question here...\",\n      value: questionText,\n      onChange: e => setQuestionText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-4 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n        onClick: handleTextSelection,\n        children: \"Underline Selected Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\",\n        onClick: handleSave,\n        children: \"Save Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-bold\",\n        children: \"Blanks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), blanks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No blanks added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc pl-6\",\n        children: blanks.map((blank, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: blank.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), \" (Start: \", blank.startIndex, \", End:\", \" \", blank.endIndex, \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ClozeForm, \"LnZ7Lb3jkuqCOb3pJDj1ElSa0ZY=\");\n_c = ClozeForm;\nexport default ClozeForm;\nvar _c;\n$RefreshReg$(_c, \"ClozeForm\");","map":{"version":3,"names":["React","useState","saveFormData","jsxDEV","_jsxDEV","ClozeForm","_s","questionText","setQuestionText","blanks","setBlanks","handleTextSelection","textarea","document","getElementById","start","selectionStart","end","selectionEnd","alert","selectedText","substring","text","startIndex","endIndex","handleSave","payload","question","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","value","onChange","e","target","onClick","length","map","blank","index","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/components/ClozeForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { saveFormData } from \"../services/api\"; // Ensure this is implemented correctly\r\n\r\nconst ClozeForm = () => {\r\n  const [questionText, setQuestionText] = useState(\"\");\r\n  const [blanks, setBlanks] = useState([]);\r\n\r\n  const handleTextSelection = () => {\r\n    const textarea = document.getElementById(\"questionTextarea\");\r\n    const start = textarea.selectionStart; // Start index of selected text\r\n    const end = textarea.selectionEnd; // End index of selected text\r\n\r\n    if (start === end) {\r\n      alert(\"Please select some text to make it a blank.\");\r\n      return;\r\n    }\r\n\r\n    const selectedText = questionText.substring(start, end);\r\n\r\n    // Add the blank\r\n    setBlanks([\r\n      ...blanks,\r\n      { text: selectedText, startIndex: start, endIndex: end },\r\n    ]);\r\n\r\n    alert(`Blank added: \"${selectedText}\"`);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const payload = {\r\n        question: questionText,\r\n        blanks,\r\n      };\r\n      await saveFormData(payload);\r\n      alert(\"Cloze question saved successfully!\");\r\n      setQuestionText(\"\"); // Reset question text\r\n      setBlanks([]); // Reset blanks\r\n    } catch (error) {\r\n      console.error(\"Error saving cloze question:\", error);\r\n      alert(\"Failed to save cloze question.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 bg-gray-100 rounded shadow\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Cloze Question</h2>\r\n      <textarea\r\n        id=\"questionTextarea\"\r\n        className=\"w-full h-32 p-2 border border-gray-300 rounded mb-4\"\r\n        placeholder=\"Type your question here...\"\r\n        value={questionText}\r\n        onChange={(e) => setQuestionText(e.target.value)}\r\n      ></textarea>\r\n      <div className=\"flex gap-4 mb-4\">\r\n        <button\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\r\n          onClick={handleTextSelection}\r\n        >\r\n          Underline Selected Text\r\n        </button>\r\n        <button\r\n          className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\r\n          onClick={handleSave}\r\n        >\r\n          Save Question\r\n        </button>\r\n      </div>\r\n      <div className=\"mt-4\">\r\n        <h3 className=\"text-lg font-bold\">Blanks:</h3>\r\n        {blanks.length === 0 ? (\r\n          <p>No blanks added yet.</p>\r\n        ) : (\r\n          <ul className=\"list-disc pl-6\">\r\n            {blanks.map((blank, index) => (\r\n              <li key={index}>\r\n                <strong>{blank.text}</strong> (Start: {blank.startIndex}, End:{\" \"}\r\n                {blank.endIndex})\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClozeForm;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IAC5D,MAAMC,KAAK,GAAGH,QAAQ,CAACI,cAAc,CAAC,CAAC;IACvC,MAAMC,GAAG,GAAGL,QAAQ,CAACM,YAAY,CAAC,CAAC;;IAEnC,IAAIH,KAAK,KAAKE,GAAG,EAAE;MACjBE,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACF;IAEA,MAAMC,YAAY,GAAGb,YAAY,CAACc,SAAS,CAACN,KAAK,EAAEE,GAAG,CAAC;;IAEvD;IACAP,SAAS,CAAC,CACR,GAAGD,MAAM,EACT;MAAEa,IAAI,EAAEF,YAAY;MAAEG,UAAU,EAAER,KAAK;MAAES,QAAQ,EAAEP;IAAI,CAAC,CACzD,CAAC;IAEFE,KAAK,CAAC,iBAAiBC,YAAY,GAAG,CAAC;EACzC,CAAC;EAED,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,OAAO,GAAG;QACdC,QAAQ,EAAEpB,YAAY;QACtBE;MACF,CAAC;MACD,MAAMP,YAAY,CAACwB,OAAO,CAAC;MAC3BP,KAAK,CAAC,oCAAoC,CAAC;MAC3CX,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;MACrBE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDT,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,oBACEf,OAAA;IAAK0B,SAAS,EAAC,gCAAgC;IAAAC,QAAA,gBAC7C3B,OAAA;MAAI0B,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3D/B,OAAA;MACEgC,EAAE,EAAC,kBAAkB;MACrBN,SAAS,EAAC,qDAAqD;MAC/DO,WAAW,EAAC,4BAA4B;MACxCC,KAAK,EAAE/B,YAAa;MACpBgC,QAAQ,EAAGC,CAAC,IAAKhC,eAAe,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACZ/B,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B3B,OAAA;QACE0B,SAAS,EAAC,4DAA4D;QACtEY,OAAO,EAAE/B,mBAAoB;QAAAoB,QAAA,EAC9B;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT/B,OAAA;QACE0B,SAAS,EAAC,8DAA8D;QACxEY,OAAO,EAAEjB,UAAW;QAAAM,QAAA,EACrB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN/B,OAAA;MAAK0B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB3B,OAAA;QAAI0B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC7C1B,MAAM,CAACkC,MAAM,KAAK,CAAC,gBAClBvC,OAAA;QAAA2B,QAAA,EAAG;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE3B/B,OAAA;QAAI0B,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC3BtB,MAAM,CAACmC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB1C,OAAA;UAAA2B,QAAA,gBACE3B,OAAA;YAAA2B,QAAA,EAASc,KAAK,CAACvB;UAAI;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,aAAS,EAACU,KAAK,CAACtB,UAAU,EAAC,QAAM,EAAC,GAAG,EACjEsB,KAAK,CAACrB,QAAQ,EAAC,GAClB;QAAA,GAHSsB,KAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAlFID,SAAS;AAAA0C,EAAA,GAAT1C,SAAS;AAoFf,eAAeA,SAAS;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}