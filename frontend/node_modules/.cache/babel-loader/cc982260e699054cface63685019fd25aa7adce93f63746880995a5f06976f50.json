{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kishore\\\\form-builder\\\\frontend\\\\src\\\\components\\\\CategorizedForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormBuilder = ({\n  questions\n}) => {\n  _s();\n  const [questionText, setQuestionText] = useState('');\n  const [categories, setCategories] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [newCategory, setNewCategory] = useState('');\n  const [newOption, setNewOption] = useState('');\n  const navigate = useNavigate();\n\n  // Filter categorized questions\n  const categorizedQuestion = questions.find(q => q.type === 'categorized');\n\n  // Update selected categories and options dynamically\n  const handleCategorySelection = category => {\n    setCategories(prevCategories => prevCategories.includes(category) ? prevCategories.filter(c => c !== category) : [...prevCategories, category]);\n  };\n  const handleOptionSelection = option => {\n    setOptions(prevOptions => prevOptions.includes(option) ? prevOptions.filter(o => o !== option) : [...prevOptions, option]);\n  };\n\n  // Handle save action (store the question or proceed)\n  const handleSave = () => {\n    const newQuestion = {\n      type: 'categorized',\n      data: {\n        questionText,\n        categories,\n        options\n      }\n    };\n    // Here, you can add your API call or state update to save the question\n    console.log('New Question:', newQuestion);\n\n    // Optionally, redirect to renderer page\n    navigate('/renderer');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 border rounded shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Form Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Question Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: questionText,\n        onChange: e => setQuestionText(e.target.value),\n        placeholder: \"Enter your question text\",\n        className: \"border rounded p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Select Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), categorizedQuestion === null || categorizedQuestion === void 0 ? void 0 : categorizedQuestion.data.categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `category-${index}`,\n          checked: categories.includes(category),\n          onChange: () => handleCategorySelection(category),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `category-${index}`,\n          className: \"flex-grow\",\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Select Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), categorizedQuestion === null || categorizedQuestion === void 0 ? void 0 : categorizedQuestion.data.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-2 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `option-${index}`,\n          checked: options.includes(option),\n          onChange: () => handleOptionSelection(option),\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `option-${index}`,\n          className: \"flex-grow\",\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"mt-4 px-6 py-2 bg-green-500 text-white rounded\",\n      children: \"Save Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"TJeeoKCun+GJu4/zlNI9QGEpAXc=\", false, function () {\n  return [useNavigate];\n});\n_c = FormBuilder;\nexport default FormBuilder;\nvar _c;\n$RefreshReg$(_c, \"FormBuilder\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","FormBuilder","questions","_s","questionText","setQuestionText","categories","setCategories","options","setOptions","newCategory","setNewCategory","newOption","setNewOption","navigate","categorizedQuestion","find","q","type","handleCategorySelection","category","prevCategories","includes","filter","c","handleOptionSelection","option","prevOptions","o","handleSave","newQuestion","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","map","index","id","checked","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kishore/form-builder/frontend/src/components/CategorizedForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FormBuilder = ({ questions }) => {\r\n  const [questionText, setQuestionText] = useState('');\r\n  const [categories, setCategories] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const [newOption, setNewOption] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Filter categorized questions\r\n  const categorizedQuestion = questions.find(q => q.type === 'categorized');\r\n\r\n  // Update selected categories and options dynamically\r\n  const handleCategorySelection = (category) => {\r\n    setCategories((prevCategories) => \r\n      prevCategories.includes(category)\r\n        ? prevCategories.filter(c => c !== category)\r\n        : [...prevCategories, category]\r\n    );\r\n  };\r\n\r\n  const handleOptionSelection = (option) => {\r\n    setOptions((prevOptions) =>\r\n      prevOptions.includes(option)\r\n        ? prevOptions.filter(o => o !== option)\r\n        : [...prevOptions, option]\r\n    );\r\n  };\r\n\r\n  // Handle save action (store the question or proceed)\r\n  const handleSave = () => {\r\n    const newQuestion = {\r\n      type: 'categorized',\r\n      data: {\r\n        questionText,\r\n        categories,\r\n        options,\r\n      },\r\n    };\r\n    // Here, you can add your API call or state update to save the question\r\n    console.log('New Question:', newQuestion);\r\n\r\n    // Optionally, redirect to renderer page\r\n    navigate('/renderer');\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border rounded shadow-md\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Form Builder</h2>\r\n\r\n      {/* Question Text Input */}\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"font-semibold mb-2\">Question Text</h3>\r\n        <textarea\r\n          value={questionText}\r\n          onChange={(e) => setQuestionText(e.target.value)}\r\n          placeholder=\"Enter your question text\"\r\n          className=\"border rounded p-2 w-full\"\r\n        />\r\n      </div>\r\n\r\n      {/* Categories Selection */}\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"font-semibold mb-2\">Select Categories</h3>\r\n        {categorizedQuestion?.data.categories.map((category, index) => (\r\n          <div key={index} className=\"flex items-center gap-2 mb-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id={`category-${index}`}\r\n              checked={categories.includes(category)}\r\n              onChange={() => handleCategorySelection(category)}\r\n              className=\"mr-2\"\r\n            />\r\n            <label htmlFor={`category-${index}`} className=\"flex-grow\">{category}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Options Selection */}\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"font-semibold mb-2\">Select Options</h3>\r\n        {categorizedQuestion?.data.options.map((option, index) => (\r\n          <div key={index} className=\"flex items-center gap-2 mb-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id={`option-${index}`}\r\n              checked={options.includes(option)}\r\n              onChange={() => handleOptionSelection(option)}\r\n              className=\"mr-2\"\r\n            />\r\n            <label htmlFor={`option-${index}`} className=\"flex-grow\">{option}</label>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Save Button */}\r\n      <button\r\n        onClick={handleSave}\r\n        className=\"mt-4 px-6 py-2 bg-green-500 text-white rounded\"\r\n      >\r\n        Save Question\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}